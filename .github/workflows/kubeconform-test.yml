name: kubeconform Matrix Validation with Slack
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  discover-directories:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Find all directories
        id: set-matrix
        run: |
          dirs=$(find . -maxdepth 1 -type d -not -path '*/\.*' -not -path '\.' | sed 's|^\./||' | grep -v -E '(^\.git$|^\.github$)')
          matrix=$(echo "$dirs" | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  validate-manifests:
    needs: discover-directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.discover-directories.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Validate ${{ matrix.directory }} with kubeconform
        id: kubeconform
        uses: docker://ghcr.io/yannh/kubeconform:latest
        continue-on-error: true
        with:
          args: >-
            -verbose
            -output json
            -schema-location default
            -schema-location "https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{ .Group }}/{{ .ResourceKind }}_{{ .ResourceAPIVersion }}.json"
            ${{ matrix.directory }}/
            
      - name: Send individual Slack notification for ${{ matrix.directory }}
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: test-notifications
          SLACK_COLOR: ${{ steps.kubeconform.outcome == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: ${{ steps.kubeconform.outcome == 'success' && '✅' || '❌' }} Directory '${{ matrix.directory }}' validation ${{ steps.kubeconform.outcome }}
          SLACK_TITLE: "${{ steps.kubeconform.outcome == 'success' && 'Validation Passed' || 'Validation Failed' }} - ${{ matrix.directory }}"
          SLACK_USERNAME: kubeconform-bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true

  test-slack-webhook:
    runs-on: ubuntu-latest
    steps:
      - name: Test Slack webhook
        run: |
          echo "Testing Slack webhook configuration"
          echo "Webhook URL is set: ${{ secrets.SLACK_WEBHOOK_URL != '' }}"
        continue-on-error: true

  notify-summary:
    needs: [validate-manifests, test-slack-webhook]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Prepare summary message
        run: |
          # Count successful and failed jobs
          success_count=0
          failure_count=0
          
          # This would require more complex logic to parse individual results
          # For now, just send a simple summary
          echo "MESSAGE=📊 Validation process completed for ${{ github.repository }}\n• Individual notifications sent for each directory" >> $GITHUB_ENV
          echo "COLOR=good" >> $GITHUB_ENV
          
      - name: Send summary notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: test-notifications
          SLACK_COLOR: ${{ env.COLOR }}
          SLACK_MESSAGE: ${{ env.MESSAGE }}
          SLACK_TITLE: Validation Process Complete
          SLACK_USERNAME: kubeconform-bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true
